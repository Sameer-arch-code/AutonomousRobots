
services:
  iki_ros:
    image: fbe-dockerreg.rwu.de/doz-iki/staehle-vls/amr-tb3:latest
    container_name: iki_ros2_containerPrime
    privileged: true
    network_mode: "host"
    ipc: "host"
    # stdin_open: true
    # tty: true
    # runtime: nvidia
    environment:
      - DISPLAY=${DISPLAY}
      - XDG_RUNTIME_DIR=/tmp/runtime-root
      - ROS_DOMAIN_ID=$ROS_DOMAIN_ID
      - ROS_LOCALHOST_ONLY=0
      - TURTLEBOT3_MODEL=burger
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=all
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
      - /home/sameer/iki_workspace:/root
      - /tmp/runtime-root:/tmp/runtime-root
    command: >
      bash -c "
        source /opt/ros/humble/setup.bash &&
        source /usr/share/gazebo/setup.bash &&
        export TURTLEBOT3_MODEL=burger &&
        colcon build --symlink-install &&
        source install/setup.bash &&
        ros2 launch image_proc image_proc.launch.py namespace:=/camera &&
        sleep 3 &&
        ros2 run autorace_real autorace_real;

        exec bash"

  iki_ros1:
    image: fbe-dockerreg.rwu.de/doz-iki/staehle-vls/amr-tb3:latest
    container_name: iki_ros2_containerPrime_workspace
    privileged: true
    network_mode: "host"
    ipc: "host"
    # stdin_open: true
    # tty: true
    # runtime: nvidia
    environment:
      - DISPLAY=${DISPLAY}
      - XDG_RUNTIME_DIR=/tmp/runtime-root
      - ROS_DOMAIN_ID=$ROS_DOMAIN_ID
      - ROS_LOCALHOST_ONLY=0
      - TURTLEBOT3_MODEL=burger
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=all
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
      - /home/sameer/iki_workspace:/root
      - /tmp/runtime-root:/tmp/runtime-root
    command: >
      bash -c "
        source /opt/ros/humble/setup.bash &&
  
        source install/setup.bash &&
        sleep 5 &&
        ros2 run autorace_real autorace_real;
        exec bash"